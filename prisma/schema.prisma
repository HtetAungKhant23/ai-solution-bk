generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model User {
  id          String  @id @default(uuid())
  name        String
  phone       String
  email       String
  companyName String  @map("company_name")
  country     String
  jobTitle    String  @map("job_title")
  jobDetail   String  @map("job_detail")
  seen        Boolean @default(false)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users")
}

model Admin {
  id       String @id @default(uuid())
  name     String
  email    String @unique
  password String

  isDeleted Boolean @default(false)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  events    Event[]
  blogs     Blog[]

  @@map("admins")
}

model Event {
  id           String       @id @default(uuid())
  name         String
  detail       String
  startDate    DateTime     @map("start_date")
  endDate      DateTime     @map("end_date")
  status       EVENT_STATUS @default(UPCOMING)
  organization String
  createdById  String
  createdBy    Admin        @relation(fields: [createdById], references: [id])

  isDeleted Boolean @default(false)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  files     File[]

  @@map("events")
}

model Blog {
  id          String @id @default(uuid())
  title       String
  body        String
  createdById String
  createdBy   Admin  @relation(fields: [createdById], references: [id])

  isDeleted Boolean @default(false)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  files     File[]

  @@map("blogs")
}

model File {
  id      String  @id @default(uuid())
  path    String
  eventId String?
  event   Event?  @relation(fields: [eventId], references: [id])
  blogId  String?
  Blog    Blog?   @relation(fields: [blogId], references: [id])

  isDeleted Boolean @default(false)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("files")
}

model Rating {
  id       String @id @default(uuid())
  ratedBy  String
  feedback String
  rate     Int

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("ratings")
}

enum EVENT_STATUS {
  PREVIOUS
  ONGOING
  UPCOMING
}
